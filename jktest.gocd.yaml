format_version: 10
pipelines:
  jktest04:
    group: deployment-group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: 1
    materials:
      git-backend:
        git: https://github.com/jk0789/gocd_code.git
        shallow_clone: false
        auto_update: true
        branch: main
    stages:
      - Preparation:
          fetch_materials: true
          clean_workspace: false
          jobs:
            prepare-environment: 
              timeout: 0
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - |
                        echo "Preparing environment..."
                        export BUILD_DIR=/home/joshi/builds
                        export BE_TARGET_DIR=/home/joshi/prime-square
                        export BE_ARCHIVE_DIR=/home/joshi/archive

                        if [ -d "/home/joshi/prime-square" ]; then
                          echo "Found existing 'prime-square' directory. Proceeding with regular deployment..."

                          echo "Stopping PrimeSquare.service..."
                          sudo systemctl stop PrimeSquare.service || { echo "Failed to stop service"; exit 1; }

                          echo "Archiving existing core JAR..."
                          sudo mv /home/joshi/prime-square/core-*.jar /home/joshi/archive/core-$(date +%F-%T).jar || { echo "Failed to archive core JAR"; exit 1; }

                          echo "Preparing for Database Update..."
                          echo "REGULAR_DEPLOYMENT" > deployment_type.txt
                        else
                          echo "No 'prime-square' directory found. Proceeding with fresh deployment..."
                          echo "FRESH_DEPLOYMENT" > deployment_type.txt                          
                          exit 0  
                        fi
      - New-Deployment:
          fetch_materials: false
          clean_workspace: false
          jobs:
            fresh-deployment:
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - |
                        
                        export DB_SCRIPTS_DIR=/home/joshi/prime-square/database-scripts
                        export DB_USER=psdbadmin
                        export DB_PASS=6%EOm@Te1sb19Th6

                        DEPLOYMENT_TYPE=$(cat deployment_type.txt)

                        if [ "$DEPLOYMENT_TYPE" == "FRESH_DEPLOYMENT" ]; then
                          echo "Fresh deployment detected. Setting up environment..."

                          echo "Creating 'prime-square' directory..."
                          sudo mkdir -p /home/joshi/prime-square || { echo "Failed to create target directory"; exit 1; }

                          echo "Unzipping all contents to 'prime-square'..."
                          sudo unzip -o /home/joshi/archive/ps_be_*.zip -d /home/joshi/prime-square || { echo "Failed to unzip contents"; exit 1; }

                          echo "Copying service file to /etc/systemd/system/..."
                          sudo cp /home/joshi/prime-square/service/PrimeSquare.service /etc/systemd/system/ || { echo "Failed to copy service file"; exit 1; }

                          echo "Reloading systemd daemon..."
                          sudo systemctl daemon-reload || { echo "Failed to reload daemon"; exit 1; }

                          echo "Enabling PrimeSquare.service..."
                          sudo systemctl enable PrimeSquare.service || { echo "Failed to start service"; exit 1; }

                          echo "Fresh deployment complete."
                          
                          echo "Giving execute permissions to database scripts..."
                          sudo chmod -R +x "${DB_SCRIPTS_DIR}" || { echo "Failed to give execute permissions to database scripts"; exit 1; }
  
                          echo "Executing database scripts..."
                          mysql < "${DB_SCRIPTS_DIR}/ddl_drop_schema_script.sql" -u ${DB_USER} -p${DB_PASS} -h 172.16.7.115 || { echo "Failed to execute ddl_drop_schema_script.sql"; exit 1; }
                          mysql < "${DB_SCRIPTS_DIR}/idfc_primesquare_workflow_ddl_dml.sql" -u ${DB_USER} -p${DB_PASS} -h 172.16.7.115 || { echo "Failed to execute primesquare_workflow_ddl_dml.sql"; exit 1; }
                          mysql < "${DB_SCRIPTS_DIR}/ddl_create_scripts.sql" -u ${DB_USER} -p${DB_PASS} -h 172.16.7.115 || { echo "Failed to execute ddl_create_scripts.sql"; exit 1; }
                          mysql < "${DB_SCRIPTS_DIR}/dml_insert_scripts.sql" -u ${DB_USER} -p${DB_PASS} -h 172.16.7.115 || { echo "Failed to execute dml_insert_scripts.sql"; exit 1; }
                          mysql < "${DB_SCRIPTS_DIR}/ps_index_create.sql" -u ${DB_USER} -p${DB_PASS} -h 172.16.7.115 || { echo "Failed to execute ps_index_create.sql"; exit 1; }

                          echo "Database update for fresh deployment complete."
                          echo "Starting PrimeSquare.service..."
                          sudo systemctl start PrimeSquare.service || { echo "Failed to start service"; exit 1; }

                        else
                          echo "Skipping new deployment stage."
                          exit 0
                        fi


      - Regular-deployment:
          fetch_materials: false
          clean_workspace: false
          jobs:
            Regular-deployment:
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - >
                        export BUILD_DIR=/home/joshi/builds

                        export BE_TARGET_DIR=/home/joshi/prime-square

                        export BE_ARCHIVE_DIR=/home/joshi/archive

                        export SFTP_HOST=172.16.7.116

                        export SFTP_USER=surya

                        export SFTP_KEY=/var/go/.ssh/id_rsa

                        export SFTP_UPLOADS_DIR=uploads



                        DEPLOYMENT_TYPE=$(cat deployment_type.txt)

                        if [ "$DEPLOYMENT_TYPE" == "REGULAR_DEPLOYMENT" ]; then
                          
                          echo "Accessing SFTP machine to fetch the backend zip file..."

                        sftp -o StrictHostKeyChecking=no -i /var/go/.ssh/id_rsa ${SFTP_USER}@${SFTP_HOST} <<EOF

                        cd ${SFTP_UPLOADS_DIR}

                        get ps_be_*.zip ${BUILD_DIR}

                        bye

                        EOF


                          if [ $? -ne 0 ]; then
                            echo "Failed to fetch backend.zip from SFTP."
                            exit 1
                          fi
                          
                          echo "Unzipping the backend artifacts to BE_TARGET_DIR..."
                          sudo unzip -o "${BUILD_DIR}/ps_be_*.zip" -d "${BE_TARGET_DIR}" || { echo "Failed to unzip backend.zip"; exit 1; }

                          echo "Replacing core JAR..."
                          sudo mv /home/joshi/archive/core-*.jar /home/joshi/prime-square/ || { echo "Failed to replace core JAR"; exit 0; }

                          echo "Changing permissions of BE_TARGET_DIR to joshi:joshi..."
                          sudo chown -R joshi:joshi "${BE_TARGET_DIR}" || { echo "Failed to change permissions of BE_TARGET_DIR"; exit 1; }
                        else
                          echo "Skipping regular deployment."
                          exit 0
                        fi


      - Database-Update:
          fetch_materials: false
          clean_workspace: false
          approval:
            type: manual
          jobs:
            update-database:
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - |

                        export DB_SCRIPTS_DIR=/home/joshi/prime-square/database-scripts
                        export DB_USER=psdbadmin
                        export DB_PASS=6%EOm@Te1sb19Th6

                        DEPLOYMENT_TYPE=$(cat deployment_type.txt)

                        if [ -z "$GO_APPROVED_BY" ]; then
                          echo "Manual approval not granted. Skipping database update."
                          echo "SKIP_DB_UPDATE=true" > /home/joshi/pipeline_flags
                          exit 0
                        else
                          echo "Manual approval granted. Executing database update..."
                          echo "SKIP_DB_UPDATE=false" > /home/joshi/pipeline_flags
                        fi  

                        if [ "$DEPLOYMENT_TYPE" == "REGULAR_DEPLOYMENT" ]; then
                          echo "Executing database scripts for regular deployment..."
                          mysql < /home/joshi/prime-square/database-scripts/ddl_drop_schema_script.sql -u psdbadmin -p6%EOm@Te1sb19Th6 -h 172.16.7.115 || { echo "Failed to drop schema"; exit 1; }
                          mysql < "${DB_SCRIPTS_DIR}/idfc_primesquare_workflow_ddl_dml.sql" -u ${DB_USER} -p${DB_PASS} -h 172.16.7.115 || { echo "Failed to execute primesquare_workflow_ddl_dml.sql"; exit 1; }
                          mysql < "${DB_SCRIPTS_DIR}/ddl_create_scripts.sql" -u ${DB_USER} -p${DB_PASS} -h 172.16.7.115 || { echo "Failed to execute ddl_create_scripts.sql"; exit 1; }
                          mysql < "${DB_SCRIPTS_DIR}/dml_insert_scripts.sql" -u ${DB_USER} -p${DB_PASS} -h 172.16.7.115 || { echo "Failed to execute dml_insert_scripts.sql"; exit 1; }
                          mysql < "${DB_SCRIPTS_DIR}/ps_index_create.sql" -u ${DB_USER} -p${DB_PASS} -h 172.16.7.115 || { echo "Failed to execute ps_index_create.sql"; exit 1; }

                          echo "Database update complete."
                        else
                          echo "Skipping database update for regular deployment."
                        fi

      - Restarting-service:
          fetch_materials: false
          clean_workspace: false
          jobs:
            start-service: 
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - |

                        if [ -f /home/joshi/pipeline_flags ]; then
                            source /home/joshi/pipeline_flags
                        fi

                        if [ "$SKIP_DB_UPDATE" == "true" ]; then
                          echo "Database update was skipped. Proceeding with service restart..."
                          sudo systemctl restart PrimeSquare.service || { echo "Failed to start service"; exit 1; }
                        else
                          echo "Database update completed. Proceeding with service restart..."
                          sudo systemctl restart PrimeSquare.service || { echo "Failed to start service"; exit 1; }
                        fi
                        
                        echo "Service started successfully."
              resources:
                - joshi                   
environments:
  jktest04:
    pipelines:
      - jktest04                        
